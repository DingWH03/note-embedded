name: Update Note Repository with mdbook

on:
  push:
    branches:
      - master

jobs:
  update-note:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the mdbook repository
    - name: Checkout mdbook repository
      uses: actions/checkout@v3

    # Step 2: Download and install mdBook v0.4.52
    - name: Download and install mdBook v0.4.52
      run: |
        curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.52/mdbook-v0.4.52-x86_64-unknown-linux-gnu.tar.gz | tar -xz -C $HOME/.cargo/bin
        export PATH=$PATH:$HOME/.cargo/bin

    # Step 3: Install jq and toml2json
    - name: Install jq and toml2json
      run: sudo apt-get install -y jq toml2json

    # Step 4: Get book title from book.toml and set it as output
    - name: Get book title from book.toml
      id: get_book_name
      run: |
        BOOK_NAME=$(jq -r '.book.title' <(toml2json ./book.toml))
        echo "Book title is: $BOOK_NAME"
        echo "::set-output name=BOOK_NAME::$(echo $BOOK_NAME)"

    # Step 5: Build mdbook
    - name: Build mdbook
      run: mdbook build

    # Step 6: Checkout the note repository
    - name: Checkout note repository
      uses: actions/checkout@v3
      with:
        repository: DingWH03/note
        token: ${{ secrets.GITHUB_TOKEN }}
        path: note-repo

    # Step 7: Start ssh-agent and add deploy key
    # 生成方式ssh-keygen -t ed25519 -C "note-embedded" -f github-actions-key -N ""
    - name: Start ssh-agent and add deploy key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_KEY }}

    # Step 8: Copy the book directory to the note repository and rename it
    - name: Copy book to note repository
      run: |
        BOOK_NAME="${{ steps.get_book_name.outputs.BOOK_NAME }}"

        # 删除目标目录，确保不存在同名目录
        rm -rf "./note-repo/book/${BOOK_NAME}"

        # 复制 book 目录
        cp -r ./book "./note-repo/book/${BOOK_NAME}"

        # 复制 book.toml 文件
        cp ./book.toml "./note-repo/list/${BOOK_NAME}.toml"


    # Step 9: Commit and push changes to note repository using SSH
    - name: Commit and push changes
      run: |
        BOOK_NAME="${{ steps.get_book_name.outputs.BOOK_NAME }}"
        cd note-repo
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "Update book directory and book.toml from mdbook build for ${BOOK_NAME}"
        git push git@github.com:DingWH03/note.git HEAD:master
